<?php

namespace Proxies\__CG__\App\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class MicroElement extends \App\Entity\MicroElement implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\MicroElement' . "\0" . 'id', '' . "\0" . 'App\\Entity\\MicroElement' . "\0" . 'sodium', '' . "\0" . 'App\\Entity\\MicroElement' . "\0" . 'potassium', '' . "\0" . 'App\\Entity\\MicroElement' . "\0" . 'iron', '' . "\0" . 'App\\Entity\\MicroElement' . "\0" . 'calcium', '' . "\0" . 'App\\Entity\\MicroElement' . "\0" . 'phosphorus', '' . "\0" . 'App\\Entity\\MicroElement' . "\0" . 'thiamine', '' . "\0" . 'App\\Entity\\MicroElement' . "\0" . 'riboflavin', '' . "\0" . 'App\\Entity\\MicroElement' . "\0" . 'niacin', '' . "\0" . 'App\\Entity\\MicroElement' . "\0" . 'vitamin_a', '' . "\0" . 'App\\Entity\\MicroElement' . "\0" . 'vitamin_c', '' . "\0" . 'App\\Entity\\MicroElement' . "\0" . 'vitamin_e', '' . "\0" . 'App\\Entity\\MicroElement' . "\0" . 'food'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\MicroElement' . "\0" . 'id', '' . "\0" . 'App\\Entity\\MicroElement' . "\0" . 'sodium', '' . "\0" . 'App\\Entity\\MicroElement' . "\0" . 'potassium', '' . "\0" . 'App\\Entity\\MicroElement' . "\0" . 'iron', '' . "\0" . 'App\\Entity\\MicroElement' . "\0" . 'calcium', '' . "\0" . 'App\\Entity\\MicroElement' . "\0" . 'phosphorus', '' . "\0" . 'App\\Entity\\MicroElement' . "\0" . 'thiamine', '' . "\0" . 'App\\Entity\\MicroElement' . "\0" . 'riboflavin', '' . "\0" . 'App\\Entity\\MicroElement' . "\0" . 'niacin', '' . "\0" . 'App\\Entity\\MicroElement' . "\0" . 'vitamin_a', '' . "\0" . 'App\\Entity\\MicroElement' . "\0" . 'vitamin_c', '' . "\0" . 'App\\Entity\\MicroElement' . "\0" . 'vitamin_e', '' . "\0" . 'App\\Entity\\MicroElement' . "\0" . 'food'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (MicroElement $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getFood(): ?\App\Entity\Food
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFood', []);

        return parent::getFood();
    }

    /**
     * {@inheritDoc}
     */
    public function setFood(?\App\Entity\Food $food): \App\Entity\MicroElement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFood', [$food]);

        return parent::setFood($food);
    }

    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getSodium(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSodium', []);

        return parent::getSodium();
    }

    /**
     * {@inheritDoc}
     */
    public function setSodium(?string $sodium): \App\Entity\MicroElement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSodium', [$sodium]);

        return parent::setSodium($sodium);
    }

    /**
     * {@inheritDoc}
     */
    public function getPotassium(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPotassium', []);

        return parent::getPotassium();
    }

    /**
     * {@inheritDoc}
     */
    public function setPotassium(?string $potassium): \App\Entity\MicroElement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPotassium', [$potassium]);

        return parent::setPotassium($potassium);
    }

    /**
     * {@inheritDoc}
     */
    public function getIron(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIron', []);

        return parent::getIron();
    }

    /**
     * {@inheritDoc}
     */
    public function setIron(?string $iron): \App\Entity\MicroElement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIron', [$iron]);

        return parent::setIron($iron);
    }

    /**
     * {@inheritDoc}
     */
    public function getCalcium(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCalcium', []);

        return parent::getCalcium();
    }

    /**
     * {@inheritDoc}
     */
    public function setCalcium(?string $calcium): \App\Entity\MicroElement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCalcium', [$calcium]);

        return parent::setCalcium($calcium);
    }

    /**
     * {@inheritDoc}
     */
    public function getPhosphorus(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhosphorus', []);

        return parent::getPhosphorus();
    }

    /**
     * {@inheritDoc}
     */
    public function setPhosphorus(?string $phosphorus): \App\Entity\MicroElement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPhosphorus', [$phosphorus]);

        return parent::setPhosphorus($phosphorus);
    }

    /**
     * {@inheritDoc}
     */
    public function getThiamine(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getThiamine', []);

        return parent::getThiamine();
    }

    /**
     * {@inheritDoc}
     */
    public function setThiamine(?string $thiamine): \App\Entity\MicroElement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setThiamine', [$thiamine]);

        return parent::setThiamine($thiamine);
    }

    /**
     * {@inheritDoc}
     */
    public function getRiboflavin(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRiboflavin', []);

        return parent::getRiboflavin();
    }

    /**
     * {@inheritDoc}
     */
    public function setRiboflavin(?string $riboflavin): \App\Entity\MicroElement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRiboflavin', [$riboflavin]);

        return parent::setRiboflavin($riboflavin);
    }

    /**
     * {@inheritDoc}
     */
    public function getNiacin(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNiacin', []);

        return parent::getNiacin();
    }

    /**
     * {@inheritDoc}
     */
    public function setNiacin(?string $niacin): \App\Entity\MicroElement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNiacin', [$niacin]);

        return parent::setNiacin($niacin);
    }

    /**
     * {@inheritDoc}
     */
    public function getVitaminA(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVitaminA', []);

        return parent::getVitaminA();
    }

    /**
     * {@inheritDoc}
     */
    public function setVitaminA(?string $vitamin_a): \App\Entity\MicroElement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVitaminA', [$vitamin_a]);

        return parent::setVitaminA($vitamin_a);
    }

    /**
     * {@inheritDoc}
     */
    public function getVitaminC(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVitaminC', []);

        return parent::getVitaminC();
    }

    /**
     * {@inheritDoc}
     */
    public function setVitaminC(?string $vitamin_c): \App\Entity\MicroElement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVitaminC', [$vitamin_c]);

        return parent::setVitaminC($vitamin_c);
    }

    /**
     * {@inheritDoc}
     */
    public function getVitaminE(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVitaminE', []);

        return parent::getVitaminE();
    }

    /**
     * {@inheritDoc}
     */
    public function setVitaminE(?string $vitamin_e): \App\Entity\MicroElement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVitaminE', [$vitamin_e]);

        return parent::setVitaminE($vitamin_e);
    }

}
